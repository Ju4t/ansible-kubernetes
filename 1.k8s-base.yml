---
- hosts:
    - kube_master
    - kube_worker
#    - kube_new
  gather_facts: no
#  vars:
#    - APISERVER_VIP: 192.168.8.80
#    - docker_version: 20.10.12
  tasks:
    - name: 修改主机名
      shell: |
        hostnamectl set-hostname {{ hostname }}
    - name: 关闭交换区
      shell: swapoff -a && sed -ri 's/.*swap.*/#&/' /etc/fstab
    - name: 关闭SELINUX
      shell: setenforce 0 && sed -i 's#enforcing#disabled#g' /etc/selinux/config
    - name: 关闭防火墙
      service:
        name: firewalld
        state: stopped
        enabled: no

    - name: 删除冲突包
      shell: |
        yum remove -y podman docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine containerd.io
      ignore_errors: True

    - name: 关闭系统不需要的服务
      shell: systemctl stop postfix && systemctl disable postfix

    - name: 生成 hosts
      shell:
        cmd: |
          cat >> /etc/hosts << EOF
          {{ KUBERNETES_VIP }} k8s-master
          192.168.8.61 k8s-master01
          192.168.8.62 k8s-master02
          192.168.8.63 k8s-master03
          192.168.8.71 k8s-worker01
          192.168.8.72 k8s-worker02
          192.168.8.73 k8s-worker03
          192.168.8.80 cr.labdoc.cc
          EOF

    - name: 安装 ntpdate yum-utils ..
      yum:
        name: "{{ packages }}"
      vars:
        packages:
          - ntpdate
          - yum-utils
          - openssh-clients
          - net-tools

    - name: 同步时间
      shell: ntpdate ntp.aliyun.com
      ignore_errors: True

    - name: 添加 CentOS 7 阿里云 yum 源
      shell: yum-config-manager --add-repo https://mirrors.aliyun.com/repo/Centos-7.repo

    - name: 添加 Docker-CE 阿里云 yum 源
      shell: yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo

    - name: 添加 kubernetes 阿里云 yum 源
      shell:
        cmd: |
          cat <<EOF > /etc/yum.repos.d/kubernetes.repo
          [kubernetes]
          name=Kubernetes
          baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
          enabled=1
          gpgcheck=0
          repo_gpgcheck=0
          gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
          EOF

    - name: 升级系统软件
      shell: yum update -y

    - name: 安装 Kubernetes 相关包
      yum:
        name: "{{ packages }}"
      vars:
        packages:
          - device-mapper-persistent-data
          - lvm2
          - ipset
          - ipvsadm
          - containerd
          - kubelet
          - kubeadm
          - kubectl

    - name: 转发 IPv4 并让 iptables 看到桥接流量 _ 加载模块
      shell:
        cmd: |
          cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
          overlay
          br_netfilter
          EOF
    - name: 加载模块 生效
      shell: sudo modprobe overlay && sudo modprobe br_netfilter

    - name: 转发 IPv4 并让 iptables 看到桥接流量 _ 让 Linux 节点的 iptables 能够正确查看桥接流量
      shell:
        cmd: |
          cat <<EOF > /etc/sysctl.d/k8s.conf
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
          EOF
    - name: 应用 sysctl 参数
      shell: sudo sysctl --system
      ignore_errors: True

    - name: IPVS 配置
      shell:
        cmd: |
          cat <<EOF | sudo tee /etc/sysconfig/modules/ipvs.modules
          #!/bin/bash
          modprobe -- ip_vs
          modprobe -- ip_vs_rr
          modprobe -- ip_vs_wrr
          modprobe -- ip_vs_sh
          modprobe -- nf_conntrack
          EOF
    - name: IPVS 配置生效
      shell: chmod +x /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules

    - name: 配置 containerd
      shell:
        cmd: |
          mkdir -p /etc/containerd \
          && containerd config default > /etc/containerd/config.toml \
          && sed -i "s#registry.k8s.io#registry.aliyuncs.com/google_containers#g" /etc/containerd/config.toml \
          && sed -i 's#SystemdCgroup = false#SystemdCgroup = true#g' /etc/containerd/config.toml

    - name: 重启 Containerd
      shell: systemctl restart containerd && systemctl enable containerd

    - name: 配置 kubelet
      lineinfile:
        path: /etc/sysconfig/kubelet
        regexp: '^KUBELET_EXTRA_ARGS='
        line: KUBELET_EXTRA_ARGS=--container-runtime=remote --container-runtime-endpoint=unix:///run/containerd/containerd.sock --cgroup-driver=systemd

    - name: 重启 kubelet
      shell: systemctl enable kubelet && systemctl restart kubelet

    - name: 配置 crictl runtime (crictl ps)
      shell: crictl config runtime-endpoint unix:///run/containerd/containerd.sock
